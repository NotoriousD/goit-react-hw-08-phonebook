{"version":3,"sources":["Common/hoc/withAuthRedirect.js","Pages/LoginPage/LoginPage.jsx"],"names":["withAuthRedirect","Component","connect","state","isAuth","authSelectors","restProps","to","LoginPage","email","password","handleChange","e","setState","currentTarget","name","value","handleSubmit","preventDefault","props","onLogin","this","className","onSubmit","onChange","type","placeholder","autoComplete","variant","color","mapDispatchToProps","authOperations","logIn","compose"],"mappings":"mMAiBeA,IAZU,SAACC,GASxB,OAAOC,aAJiB,SAACC,GAAD,MAAY,CAClCC,OAAQC,IAAcD,OAAOD,MAGxBD,EARP,YAAqD,IAAzBE,EAAwB,EAAxBA,OAAWE,EAAa,0BAClD,OAAOF,EAAS,kBAAC,IAAD,CAAUG,GAAG,MAAS,kBAACN,EAAcK,Q,mKCEnDE,G,yNACJL,MAAQ,CACNM,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAACC,GAAD,OACb,EAAKC,SAAL,eACGD,EAAEE,cAAcC,KAAOH,EAAEE,cAAcE,S,EAG5CC,aAAe,SAACL,GACdA,EAAEM,iBAEF,EAAKC,MAAMC,QAAQ,EAAKjB,OAExB,EAAKU,SAAS,CAAEJ,MAAO,GAAIC,SAAU,M,uDAG7B,IAAD,EACqBW,KAAKlB,MAAzBM,EADD,EACCA,MAAOC,EADR,EACQA,SAEf,OACE,yBAAKY,UAAU,mBACb,yBAAKA,UAAU,aACb,uCACA,0BAAMC,SAAUF,KAAKJ,cACnB,yBAAKK,UAAU,YACb,2BACEP,KAAK,QACLC,MAAOP,EACPe,SAAUH,KAAKV,aACfc,KAAK,QACLC,YAAY,cACZC,aAAa,QAEf,iDAEF,yBAAKL,UAAU,YACb,2BACEP,KAAK,WACLC,MAAON,EACPc,SAAUH,KAAKV,aACfc,KAAK,WACLC,YAAY,iBACZC,aAAa,QAEf,4CAEF,kBAAC,IAAD,CAAQF,KAAK,SAASG,QAAQ,YAAYC,MAAM,WAAhD,gB,GAjDY5B,cA2DlB6B,EAAqB,CACzBV,QAASW,IAAeC,OAGXC,sBACbjC,IACAE,YAAQ,KAAM4B,GAFDG,CAGbzB","file":"static/js/5.076033a5.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport authSelectors from \"../../Redux/auth/auth-selectors\";\n\nconst withAuthRedirect = (Component) => {\n  function WithAuthRedirect({ isAuth, ...restProps }) {\n    return isAuth ? <Redirect to=\"/\" /> : <Component {...restProps} />;\n  }\n\n  const mapStateToProps = (state) => ({\n    isAuth: authSelectors.isAuth(state),\n  });\n\n  return connect(mapStateToProps)(WithAuthRedirect);\n};\n\nexport default withAuthRedirect;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authOperations } from \"../../Redux/auth\";\nimport { compose } from \"redux\";\nimport withAuthRedirect from \"../../Common/hoc/withAuthRedirect\";\nimport Button from \"@material-ui/core/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./LoginPage.scss\";\n\nclass LoginPage extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e) =>\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onLogin(this.state);\n\n    this.setState({ email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div className=\"loginConntainer\">\n        <div className=\"login-box\">\n          <h2>Sign In</h2>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"user-box\">\n              <input\n                name=\"email\"\n                value={email}\n                onChange={this.handleChange}\n                type=\"email\"\n                placeholder=\"Enter email\"\n                autoComplete=\"off\"\n              ></input>\n              <label>Email address</label>\n            </div>\n            <div className=\"user-box\">\n              <input\n                name=\"password\"\n                value={password}\n                onChange={this.handleChange}\n                type=\"password\"\n                placeholder=\"Enter Password\"\n                autoComplete=\"off\"\n              ></input>\n              <label>Password</label>\n            </div>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Login\n            </Button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\n\nexport default compose(\n  withAuthRedirect,\n  connect(null, mapDispatchToProps)\n)(LoginPage);\n"],"sourceRoot":""}