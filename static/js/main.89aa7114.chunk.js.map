{"version":3,"sources":["routes.js","Components/Navigation/Navigation.jsx","Components/UserMenu/UserMenu.jsx","Components/AuthMenu/AuthMenu.jsx","Components/Navbar/Navbar.jsx","Common/PrivateRoute.js","Common/PublicRoute.js","App.js","Redux/store.js","index.js","Redux/contacts/contacts-actions.js","Redux/auth/index.js","Redux/auth/auth-actions.js","Redux/auth/auth-reducer.js","Redux/auth/auth-operations.js","Components/UserMenu/usermenu.module.css","Redux/auth/auth-selectors.js","Redux/contacts/contacts-reducer.js","Components/Loader/Loader.jsx"],"names":["path","label","exact","component","lazy","private","restricted","connect","state","isAuth","authSelectors","Nav","className","Link","as","to","name","getUsername","onLogout","authOperations","logOut","avatar","styles","container","Button","variant","onClick","color","AuthMenu","Navbar","collapseOnSelect","bg","Component","restProps","render","props","pathname","from","location","routeProps","App","this","getCurrentUser","fallback","Loader","routes","map","route","key","mapDispatchToProps","authPersistConfig","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","middleware","thunk","persistor","persistStore","ReactDOM","loading","document","getElementById","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterByNames","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","createReducer","authActions","_","payload","token","setError","error","combineReducers","axios","defaults","baseURL","headers","common","Authorization","registerUser","credentials","dispatch","a","post","response","data","message","logIn","getState","persistedToken","get","module","exports","items","contactsActions","action","filter","contact","id","CircularProgress"],"mappings":"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","file":"static/js/main.89aa7114.chunk.js","sourcesContent":["import { lazy } from \"react\";\n\nexport default [\n  {\n    path: \"/\",\n    label: \"Home\",\n    exact: true,\n    component: lazy(() => import(\"./Pages/HomePage/HomePage\")),\n    private: false,\n    restricted: false,\n  },\n  {\n    path: \"/register\",\n    label: \"Register\",\n    exact: true,\n    component: lazy(() => import(\"./Pages/RegisterPage/RegisterPage\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/login\",\n    label: \"Login\",\n    exact: true,\n    component: lazy(() => import(\"./Pages/LoginPage/LoginPage\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/contacts\",\n    label: \"TContacts\",\n    exact: true,\n    component: lazy(() => import(\"./Pages/ContactPage/ContactPage.jsx\")),\n    private: true,\n    restricted: false,\n  },\n];\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { authSelectors } from \"../../Redux/auth\";\nimport { Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Navigation = ({ isAuth }) => (\n  <Nav className=\"mr-auto\">\n    <Nav.Link as={Link} to=\"/\">\n      Home\n    </Nav.Link>\n\n    {isAuth && (\n      <Nav.Link as={Link} to=\"/contacts\">\n        Contact List\n      </Nav.Link>\n    )}\n  </Nav>\n);\n\nNavigation.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: authSelectors.isAuth(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../Redux/auth\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./usermenu.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className={styles.container}>\n    <span className={styles.name}>Welcome, {name}</span>\n    <Button variant=\"contained\" onClick={onLogout} color=\"primary\">\n      Logout\n    </Button>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  name: authSelectors.getUsername(state),\n});\n\nUserMenu.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onLogout: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\n  UserMenu\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Nav } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nconst AuthMenu = () => (\n  <Nav>\n    <Nav.Link as={Link} to=\"/login\">\n      Login\n    </Nav.Link>\n    <Nav.Link as={Link} to=\"/register\">\n      Register\n    </Nav.Link>\n  </Nav>\n);\n\nAuthMenu.propTypes = PropTypes.any.isRequired;\n\nexport default AuthMenu;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Navigation from \"../Navigation\";\nimport UserMenu from \"../UserMenu\";\nimport AuthMenu from \"../AuthMenu\";\nimport { authSelectors } from \"../../Redux/auth\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport PropTypes from \"prop-types\";\n\nconst AppBar = ({ isAuth }) => (\n  <Navbar collapseOnSelect bg=\"dark\" variant=\"dark\">\n    <Navigation />\n    {isAuth ? <UserMenu /> : <AuthMenu />}\n  </Navbar>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuth: authSelectors.isAuth(state),\n});\n\nAppBar.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"../Redux/auth\";\n\nconst PrivateRoute = ({ component: Component, isAuth, ...restProps }) => (\n  <Route\n    {...restProps}\n    render={(props) =>\n      isAuth ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuth: authSelectors.isAuth(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { authSelectors } from \"../Redux/auth\";\n\nconst PublicRoute = ({ component: Component, isAuth, ...routeProps }) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuth && routeProps.restricted ? (\n        <Redirect to=\"/contacts\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuth: authSelectors.isAuth(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Suspense, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport Navbar from \"./Components/Navbar\";\nimport Loader from \"./Components/Loader\";\nimport PrivateRoute from \"./Common/PrivateRoute\";\nimport PublicRoute from \"./Common/PublicRoute\";\nimport authOperations from \"./Redux/auth/auth-operations\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar></Navbar>\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            {routes.map((route) =>\n              route.private ? (\n                <PrivateRoute key={route.label} {...route} />\n              ) : (\n                <PublicRoute key={route.label} {...route} />\n              )\n            )}\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  getCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport authReducer from \"./auth/auth-reducer\";\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware: [thunk],\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contacts/addRequest\");\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\nconst addContactError = createAction(\"contacts/addError\");\n\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactsError = createAction(\"contacts/fetchError\");\n\nconst deleteContactRequest = createAction(\"contacts/deleteRequest\");\nconst deleteContactSuccess = createAction(\"contacts/deleteSuccess\");\nconst deleteContactError = createAction(\"contacts/deleteError\");\n\nconst filterByNames = createAction(\"contacts/filter\");\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterByNames,\n};\n","export { default as authActions } from './auth-actions';\nexport { default as authReducer } from './auth-reducer';\nexport { default as authOperations } from './auth-operations';\nexport { default as authSelectors } from './auth-selectors';\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuth = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuth,\n  token,\n  error,\n});\n","import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\n// const registerUser = (credentials) => async (dispatch) => {\n//   dispatch(authActions.registerRequest());\n\n//   try {\n//     const response = await axios.post(\"/users/signup\", credentials);\n\n//     token.set(response.data.token);\n//     dispatch(authActions.registerSuccess(response.data));\n//   } catch (error) {\n//     dispatch(authActions.registerError(error.message));\n//   }\n// };\n\nconst registerUser = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n\n\n\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { registerUser, logOut, logIn, getCurrentUser };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"usermenu_container__3UhGp\",\"avatar\":\"usermenu_avatar__eb8lK\",\"name\":\"usermenu_name__1eiFL\"};","const isAuth = (state) => state.auth.isAuth;\n\nconst getUsername = (state) => state.auth.user.name;\n\nexport default {\n  isAuth,\n  getUsername,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./contacts-actions\";\n\nconst addContact = (state, action) => {\n  return [...state, action.payload];\n};\nconst deleteContact = (state, action) => {\n  return state.filter((contact) => contact.id !== action.payload);\n};\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\n  [contactsActions.addContactSuccess]: addContact,\n  [contactsActions.deleteContactSuccess]: deleteContact,\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.filterByNames]: (state, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  loading,\n  filter,\n});\n","import React from \"react\";\nimport \"./loader.css\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Loader = () => (\n  <>\n    <div className=\"load\">\n      <CircularProgress />\n    </div>\n    <div className=\"text\">loading</div>\n  </>\n);\n\nexport default Loader;\n"],"sourceRoot":""}